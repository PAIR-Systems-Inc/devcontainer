{
  "name": "GoodMem DevContainer",

  // 1️⃣ Build locally from your Dockerfile (or you can swap to the GHCR image once you push it)
  "build": {
    "context": "..",
    "dockerfile": "../Dockerfile"
  },
  "image": "ghcr.io/pair-systems-inc/goodmem-dev:latest",

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-vscode.vscode-json",
        "ms-vscode.rest-client",
        "redhat.java",
        "vscjava.vscode-java-pack",
        "vscjava.vscode-java-debug",
        "vscjava.vscode-java-maven",
        "vscjava.vscode-java-test",
        "ms-dotnettools.csharp",
        "ms-dotnettools.vscode-dotnet-runtime",
        "ms-dotnettools.csdevkit",
        "golang.go",
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-eslint",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss",
        "ms-vscode.vscode-node-azure-pack",
        "GitLab.gitlab-workflow",
        "ms-vscode.vscode-github-pullrequest",
        "eamodio.gitlens"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "java.home": "/usr/lib/jvm/java-17-openjdk-amd64",
        "java.configuration.runtimes": [
          { "name": "JavaSE-17", "path": "/usr/lib/jvm/java-17-openjdk-amd64" }
        ],
        "dotnet.defaultSolution": "disable",
        "omnisharp.enableRoslynAnalyzers": true,
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/home/vscode/go",
        "go.goroot": "/usr/local/go",
        "typescript.preferences.quoteStyle": "double",
        "javascript.preferences.quoteStyle": "double",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": { "source.organizeImports": "explicit" },
        "files.associations": { "*.env": "dotenv" }
      }
    }
  },

  // 2️⃣ Give the container full Docker access
  "runArgs": ["--privileged"],
  "mounts": [
    // so the GoodMem installer can start Docker containers on your behalf
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    // your existing data volumes
    "source=goodmem-postgres-data,target=/var/lib/postgresql/data,type=volume",
    "source=goodmem-docker-data,target=/var/lib/docker,type=volume"
  ],

  // 3️⃣ Networking
  "forwardPorts": [8080, 9090, 5432, 8001],
  "portsAttributes": {
    "8080": { "label": "GoodMem REST API",    "onAutoForward": "notify" },
    "9090": { "label": "GoodMem gRPC API" },
    "5432": { "label": "PostgreSQL Database" },
    "8001": { "label": "JobRunr Dashboard" }
  },

  // 4️⃣ Hook timings
  //    • postCreateCommand runs on container *creation*  → NO installer here
  "postCreateCommand": "echo '✅ Dev container created; installer will run on attach.'",

  //    • postAttachCommand runs on first *attach* (in a real TTY)
  //      this is where we fire the GoodMem one-liner and you answer Debug vs Prod
  "postAttachCommand": "bash -i -c 'if [ \"$SKIP_POSTATTACH\" != \"true\" ]; then curl -s https://get.goodmem.ai | bash; fi'",

  // 5️⃣ Keep VS Code running as the vscode user so your files stay owned by you
  "remoteUser": "vscode"
}
