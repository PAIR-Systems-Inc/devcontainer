{
  "name": "GoodMem DevContainer",

  // Build locally from your Dockerfile; fallback to GHCR if you choose
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  "image": "ghcr.io/pair-systems-inc/goodmem-dev:latest",

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-vscode.vscode-json",
        "ms-vscode.rest-client",
        "redhat.java",
        "vscjava.vscode-java-pack",
        "vscjava.vscode-java-debug",
        "vscjava.vscode-java-maven",
        "vscjava.vscode-java-test",
        "ms-dotnettools.csharp",
        "ms-dotnettools.vscode-dotnet-runtime",
        "ms-dotnettools.csdevkit",
        "golang.go",
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-eslint",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss",
        "ms-vscode.vscode-node-azure-pack",
        "GitLab.gitlab-workflow",
        "ms-vscode.vscode-github-pullrequest",
        "eamodio.gitlens"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "java.home": "/usr/lib/jvm/java-17-openjdk-amd64",
        "java.configuration.runtimes": [
          {
            "name": "JavaSE-17",
            "path": "/usr/lib/jvm/java-17-openjdk-amd64"
          }
        ],
        "dotnet.defaultSolution": "disable",
        "omnisharp.enableRoslynAnalyzers": true,
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/home/vscode/go",
        "go.goroot": "/usr/local/go",
        "typescript.preferences.quoteStyle": "double",
        "javascript.preferences.quoteStyle": "double",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "files.associations": {
          "*.env": "dotenv"
        }
      }
    }
  },

  "runArgs": [
    "--privileged"
  ],

  "mounts": [
    // Bind host Docker socket so the installer can start containers
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    // Your existing volumes
    "source=goodmem-postgres-data,target=/var/lib/postgresql/data,type=volume",
    "source=goodmem-docker-data,target=/var/lib/docker,type=volume"
  ],

  "forwardPorts": [8080, 9090, 5432, 8001],

  "portsAttributes": {
    "8080": {
      "label": "GoodMem REST API",
      "onAutoForward": "notify"
    },
    "9090": {
      "label": "GoodMem gRPC API"
    },
    "5432": {
      "label": "PostgreSQL Database"
    },
    "8001": {
      "label": "JobRunr Dashboard"
    }
  },

  // No-op at creation
  "postCreateCommand": "echo 'âœ… Dev container created; run setup on attach.'",

  // Interactive installer fires once on first attach (as root)
  "postAttachCommand": "bash -i -c 'if [ \"$SKIP_POSTATTACH\" != \"true\" ]; then curl -s https://get.goodmem.ai | bash; fi'"
}
